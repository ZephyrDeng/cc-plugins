{
  "version": 3,
  "sources": ["../../src/index.ts", "../../src/hook.ts", "../../src/core/config.ts", "../../src/types/config.ts", "../../src/core/logger.ts", "../../src/extractors/context.ts", "../../src/notifiers/base.ts", "../../src/extractors/git.ts", "../../src/notifiers/webhook.ts", "../../src/notifiers/macos.ts", "../../src/core/hook-handler.ts", "../../src/cli/test.ts", "../../src/cli/config.ts", "../../src/cli/logs.ts"],
  "sourcesContent": ["/**\n * Webhook Notifier Main Entry Point\n * \u652F\u6301 Hook \u6A21\u5F0F\u548C CLI \u6A21\u5F0F\n */\nimport { stdin } from \"node:process\";\nimport { Command } from \"commander\";\nimport { handleHook } from \"./hook.js\";\nimport { testCommand } from \"./cli/test.js\";\nimport { configCommand } from \"./cli/config.js\";\nimport { logsCommand } from \"./cli/logs.js\";\n\n// \u4E3B\u51FD\u6570\uFF08\u5305\u88C5 async \u903B\u8F91\u4EE5\u652F\u6301 CommonJS\uFF09\n(async () => {\n  // \u68C0\u6D4B\u8FD0\u884C\u6A21\u5F0F\uFF1A\n  // - \u5982\u679C\u6709\u547D\u4EE4\u884C\u53C2\u6570\uFF08\u9664\u4E86 node \u548C\u811A\u672C\uFF09\uFF0C\u5219\u4E3A CLI \u6A21\u5F0F\n  // - \u5426\u5219\u68C0\u67E5 stdin \u662F\u5426\u4E3A TTY\uFF0C\u5982\u679C\u4E0D\u662F\u5219\u4E3A Hook \u6A21\u5F0F\n  const hasArgs = process.argv.length > 2;\n  const isHookMode = !hasArgs && !stdin.isTTY;\n\n  if (isHookMode) {\n    // Hook \u6A21\u5F0F - \u5904\u7406\u6765\u81EA Claude Code \u7684\u4E8B\u4EF6\n    await handleHook();\n  } else {\n    // CLI \u6A21\u5F0F - \u5904\u7406\u547D\u4EE4\u884C\u547D\u4EE4\n    const program = new Command();\n\n    program\n      .name(\"webhook\")\n      .description(\"Claude Code Webhook Notifier - \u5F3A\u5927\u7684\u901A\u77E5\u7CFB\u7EDF\")\n      .version(\"2.0.0\");\n\n    // Test \u547D\u4EE4\n    program\n      .command(\"test\")\n      .description(\"\u6D4B\u8BD5\u901A\u77E5\u914D\u7F6E\")\n      .option(\n        \"-n, --notifier <type>\",\n        \"\u6307\u5B9A\u901A\u77E5\u5668: webhook | macos | all\",\n        \"all\",\n      )\n      .action(testCommand);\n\n    // Config \u547D\u4EE4\n    program\n      .command(\"config\")\n      .description(\"\u914D\u7F6E\u7BA1\u7406\")\n      .option(\"-s, --show\", \"\u663E\u793A\u5F53\u524D\u914D\u7F6E\")\n      .option(\"-i, --init\", \"\u521D\u59CB\u5316\u914D\u7F6E\u6587\u4EF6\")\n      .option(\"-v, --validate\", \"\u9A8C\u8BC1\u914D\u7F6E\")\n      .action(configCommand);\n\n    // Logs \u547D\u4EE4\n    program\n      .command(\"logs\")\n      .description(\"\u67E5\u770B\u901A\u77E5\u65E5\u5FD7\")\n      .option(\"-n, --lines <number>\", \"\u663E\u793A\u884C\u6570\", \"20\")\n      .option(\"-f, --follow\", \"\u5B9E\u65F6\u8DDF\u8E2A\u65E5\u5FD7\")\n      .option(\"-l, --level <level>\", \"\u8FC7\u6EE4\u65E5\u5FD7\u7EA7\u522B\")\n      .action(logsCommand);\n\n    program.parse();\n  }\n})().catch((error) => {\n  console.error(\"Fatal error:\", error);\n  process.exit(1);\n});\n", "/**\n * Hook Entry Point\n * \u4ECE stdin \u8BFB\u53D6 Hook \u8F93\u5165\u5E76\u5904\u7406\n */\nimport { stdin } from \"node:process\";\nimport { ConfigManager } from \"./core/config.js\";\nimport { Logger } from \"./core/logger.js\";\nimport { HookHandler } from \"./core/hook-handler.js\";\nimport type { HookInput } from \"./types/hook-events.js\";\n\n/**\n * \u4ECE stdin \u8BFB\u53D6\u6240\u6709\u8F93\u5165\n */\nfunction readStdin(): Promise<string> {\n  return new Promise((resolve) => {\n    let data = \"\";\n    stdin.setEncoding(\"utf-8\");\n\n    stdin.on(\"data\", (chunk) => {\n      data += chunk;\n    });\n\n    stdin.on(\"end\", () => {\n      resolve(data);\n    });\n  });\n}\n\n/**\n * \u5904\u7406 Hook \u4E8B\u4EF6\n */\nexport async function handleHook(): Promise<void> {\n  try {\n    // \u8BFB\u53D6\u8F93\u5165\n    const input = await readStdin();\n\n    if (!input.trim()) {\n      console.error(\"Error: No input received\");\n      process.exit(1);\n    }\n\n    // \u89E3\u6790 JSON\n    const hookInput: HookInput = JSON.parse(input);\n\n    // \u521D\u59CB\u5316\u914D\u7F6E\u548C\u65E5\u5FD7\n    const config = new ConfigManager();\n    const logger = new Logger(config);\n\n    // \u9A8C\u8BC1\u914D\u7F6E\n    const validation = config.validate();\n    if (!validation.valid) {\n      logger.error(\"Configuration validation failed\", {\n        errors: validation.errors,\n      });\n      // \u7EE7\u7EED\u6267\u884C\uFF0C\u4F46\u8BB0\u5F55\u9519\u8BEF\n    }\n\n    // \u5904\u7406 Hook\n    const handler = new HookHandler(config, logger);\n    const output = await handler.handle(hookInput);\n\n    // \u59CB\u7EC8\u8F93\u51FA JSON \u7ED3\u679C\u5230 stdout\n    console.log(JSON.stringify(output));\n\n    process.exit(0);\n  } catch (error) {\n    console.error(\"Hook handling failed:\", error);\n    process.exit(1);\n  }\n}\n", "/**\n * Configuration Manager\n * Loads and validates configuration from YAML or JSON files\n */\nimport { existsSync, readFileSync } from \"node:fs\";\nimport { homedir } from \"node:os\";\nimport { join } from \"node:path\";\nimport { parse as parseYAML } from \"yaml\";\nimport { type Config, ConfigSchema, DEFAULT_CONFIG } from \"../types/config.js\";\n\nexport class ConfigManager {\n  private config: Config;\n  private configPath: string | null = null;\n\n  constructor(configPath?: string) {\n    if (configPath) {\n      this.configPath = configPath;\n      this.config = this.loadConfigFromPath(configPath);\n    } else {\n      const result = this.findAndLoadConfig();\n      this.configPath = result.path;\n      this.config = result.config;\n    }\n  }\n\n  /**\n   * \u67E5\u627E\u5E76\u52A0\u8F7D\u914D\u7F6E\u6587\u4EF6\n   */\n  private findAndLoadConfig(): { config: Config; path: string | null } {\n    const searchPaths = [\n      // \u9879\u76EE\u7EA7\u914D\u7F6E\n      join(process.cwd(), \".webhookrc.yaml\"),\n      join(process.cwd(), \".webhookrc.yml\"),\n      join(process.cwd(), \".webhookrc.json\"),\n\n      // \u7528\u6237\u7EA7\u914D\u7F6E\n      join(homedir(), \".webhookrc.yaml\"),\n      join(homedir(), \".webhookrc.yml\"),\n      join(homedir(), \".webhookrc.json\"),\n\n      // Claude Code \u76EE\u5F55\n      join(homedir(), \".claude/webhook-notifier/config.yaml\"),\n      join(homedir(), \".claude/webhook-notifier/config.json\"),\n    ];\n\n    for (const path of searchPaths) {\n      if (existsSync(path)) {\n        try {\n          const config = this.loadConfigFromPath(path);\n          return { config, path };\n        } catch (error) {\n          console.warn(`Failed to load config from ${path}:`, error);\n          continue;\n        }\n      }\n    }\n\n    // \u6CA1\u627E\u5230\u914D\u7F6E\u6587\u4EF6\uFF0C\u4F7F\u7528\u9ED8\u8BA4\u914D\u7F6E\n    return { config: DEFAULT_CONFIG, path: null };\n  }\n\n  /**\n   * \u4ECE\u6307\u5B9A\u8DEF\u5F84\u52A0\u8F7D\u914D\u7F6E\n   */\n  private loadConfigFromPath(path: string): Config {\n    if (!existsSync(path)) {\n      throw new Error(`Config file not found: ${path}`);\n    }\n\n    const content = readFileSync(path, \"utf-8\");\n    let rawConfig: unknown;\n\n    if (path.endsWith(\".yaml\") || path.endsWith(\".yml\")) {\n      rawConfig = parseYAML(content);\n    } else if (path.endsWith(\".json\")) {\n      rawConfig = JSON.parse(content);\n    } else {\n      throw new Error(`Unsupported config file format: ${path}`);\n    }\n\n    // \u89E3\u6790\u73AF\u5883\u53D8\u91CF\n    const processed = this.processEnvVars(rawConfig);\n\n    // \u4F7F\u7528 Zod \u9A8C\u8BC1\u548C\u586B\u5145\u9ED8\u8BA4\u503C\n    const result = ConfigSchema.safeParse(processed);\n\n    if (!result.success) {\n      throw new Error(`Config validation failed: ${result.error.message}`);\n    }\n\n    return result.data;\n  }\n\n  /**\n   * \u9012\u5F52\u5904\u7406\u73AF\u5883\u53D8\u91CF\u66FF\u6362\n   * \u652F\u6301 ${VAR_NAME} \u8BED\u6CD5\n   */\n  private processEnvVars(obj: any): any {\n    if (typeof obj === \"string\") {\n      return obj.replace(/\\$\\{(\\w+)\\}/g, (_, key) => {\n        const value = process.env[key];\n        if (value === undefined) {\n          console.warn(`Environment variable ${key} is not defined`);\n          return \"\";\n        }\n        return value;\n      });\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.map((item) => this.processEnvVars(item));\n    }\n\n    if (obj !== null && typeof obj === \"object\") {\n      const processed: Record<string, any> = {};\n      for (const [key, value] of Object.entries(obj)) {\n        processed[key] = this.processEnvVars(value);\n      }\n      return processed;\n    }\n\n    return obj;\n  }\n\n  /**\n   * \u83B7\u53D6\u5B8C\u6574\u914D\u7F6E\n   */\n  getConfig(): Config {\n    return this.config;\n  }\n\n  /**\n   * \u4F7F\u7528\u8DEF\u5F84\u83B7\u53D6\u5D4C\u5957\u914D\u7F6E\u503C\n   * @example get('logging.level') => 'info'\n   * @example get('notifiers.webhook.url') => 'https://...'\n   */\n  get<T = any>(path: string): T {\n    const parts = path.split(\".\");\n    let value: any = this.config;\n\n    for (const part of parts) {\n      if (value === null || value === undefined) {\n        throw new Error(`Config path not found: ${path}`);\n      }\n      value = value[part];\n    }\n\n    return value as T;\n  }\n\n  /**\n   * \u68C0\u67E5\u914D\u7F6E\u8DEF\u5F84\u662F\u5426\u5B58\u5728\n   */\n  has(path: string): boolean {\n    try {\n      this.get(path);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u914D\u7F6E\u6587\u4EF6\u8DEF\u5F84\n   */\n  getConfigPath(): string | null {\n    return this.configPath;\n  }\n\n  /**\n   * \u9A8C\u8BC1\u914D\u7F6E\u5B8C\u6574\u6027\n   */\n  validate(): { valid: boolean; errors: string[] } {\n    const errors: string[] = [];\n\n    // \u68C0\u67E5 webhook \u914D\u7F6E\n    if (this.config.notifiers.webhook) {\n      const webhook = this.config.notifiers.webhook;\n      if (webhook.enabled && !webhook.url) {\n        errors.push(\"Webhook URL is required when webhook notifier is enabled\");\n      }\n    }\n\n    // \u68C0\u67E5 macOS \u914D\u7F6E\n    if (this.config.notifiers.macos?.enabled) {\n      if (process.platform !== \"darwin\") {\n        errors.push(\"macOS notifier can only be enabled on macOS platform\");\n      }\n    }\n\n    // \u68C0\u67E5\u65E5\u5FD7\u76EE\u5F55\n    const logDir = this.expandPath(this.config.logging.directory);\n    // \u4E0D\u68C0\u67E5\u76EE\u5F55\u662F\u5426\u5B58\u5728\uFF0C\u56E0\u4E3A\u4F1A\u81EA\u52A8\u521B\u5EFA\n\n    return {\n      valid: errors.length === 0,\n      errors,\n    };\n  }\n\n  /**\n   * \u5C55\u5F00\u8DEF\u5F84\u4E2D\u7684 ~ \u4E3A\u7528\u6237\u76EE\u5F55\n   */\n  expandPath(path: string): string {\n    if (path.startsWith(\"~/\")) {\n      return join(homedir(), path.slice(2));\n    }\n    return path;\n  }\n\n  /**\n   * \u83B7\u53D6\u65E5\u5FD7\u76EE\u5F55\u7684\u7EDD\u5BF9\u8DEF\u5F84\n   */\n  getLogDirectory(): string {\n    return this.expandPath(this.config.logging.directory);\n  }\n}\n", "/**\n * Configuration types and Zod schemas\n */\nimport { z } from \"zod\";\n\n// ==================== Logging Config ====================\n\nexport const LogLevelSchema = z.enum([\"debug\", \"info\", \"warn\", \"error\"]);\nexport type LogLevel = z.infer<typeof LogLevelSchema>;\n\nexport const LogFormatSchema = z.enum([\"json\", \"text\"]);\nexport type LogFormat = z.infer<typeof LogFormatSchema>;\n\nexport const LogRotationSchema = z.enum([\"daily\", \"size\"]);\nexport type LogRotation = z.infer<typeof LogRotationSchema>;\n\nexport const LoggingConfigSchema = z.object({\n  level: LogLevelSchema.default(\"info\"),\n  directory: z.string().default(\"~/.claude/webhook-notifier/logs\"),\n  format: LogFormatSchema.default(\"json\"),\n  rotation: LogRotationSchema.default(\"daily\"),\n});\nexport type LoggingConfig = z.infer<typeof LoggingConfigSchema>;\n\n// ==================== Events Config ====================\n\nexport const NotificationEventConfigSchema = z.object({\n  enabled: z.boolean().default(true),\n  extract_context: z.boolean().default(true),\n  context_length: z.number().int().min(50).max(500).default(200),\n});\nexport type NotificationEventConfig = z.infer<\n  typeof NotificationEventConfigSchema\n>;\n\nexport const SessionEndEventConfigSchema = z.object({\n  enabled: z.boolean().default(true),\n});\nexport type SessionEndEventConfig = z.infer<typeof SessionEndEventConfigSchema>;\n\nexport const EventsConfigSchema = z.object({\n  notification: NotificationEventConfigSchema.default({}),\n  session_end: SessionEndEventConfigSchema.default({}),\n});\nexport type EventsConfig = z.infer<typeof EventsConfigSchema>;\n\n// ==================== Webhook Notifier Config ====================\n\nexport const RetryBackoffSchema = z.enum([\"linear\", \"exponential\"]);\nexport type RetryBackoff = z.infer<typeof RetryBackoffSchema>;\n\nexport const RetryConfigSchema = z.object({\n  enabled: z.boolean().default(false),\n  max_attempts: z.number().int().min(1).max(10).default(3),\n  backoff: RetryBackoffSchema.default(\"exponential\"),\n});\nexport type RetryConfig = z.infer<typeof RetryConfigSchema>;\n\nexport const PayloadConfigSchema = z.object({\n  include: z\n    .array(\n      z.enum([\n        \"session_id\",\n        \"timestamp\",\n        \"project_info\",\n        \"git_info\",\n        \"context\",\n        \"transcript_path\",\n      ]),\n    )\n    .default([\"session_id\", \"timestamp\", \"project_info\", \"git_info\"]),\n  exclude: z.array(z.string()).default([]),\n  custom_fields: z.record(z.any()).default({}),\n});\nexport type PayloadConfig = z.infer<typeof PayloadConfigSchema>;\n\nexport const WebhookNotifierConfigSchema = z.object({\n  enabled: z.boolean().default(true),\n  url: z.string().url(),\n  timeout: z.number().int().min(1).max(60).default(10),\n  retry: RetryConfigSchema.default({}),\n  headers: z.record(z.string()).default({}),\n  payload: PayloadConfigSchema.default({}),\n});\nexport type WebhookNotifierConfig = z.infer<typeof WebhookNotifierConfigSchema>;\n\n// ==================== macOS Notifier Config ====================\n\nexport const MacOSNotificationActionSchema = z.object({\n  label: z.string(),\n  command: z.string(),\n});\nexport type MacOSNotificationAction = z.infer<\n  typeof MacOSNotificationActionSchema\n>;\n\nexport const MacOSNotificationTemplateSchema = z.object({\n  title: z.string().default(\"{{title}}\"),\n  subtitle: z.string().optional(),\n  message: z.string().default(\"{{message}}\"),\n});\nexport type MacOSNotificationTemplate = z.infer<\n  typeof MacOSNotificationTemplateSchema\n>;\n\nexport const MacOSNotifierConfigSchema = z.object({\n  enabled: z.boolean().default(false),\n  title: z.string().default(\"Claude Code\"),\n  sound: z.string().default(\"default\"),\n  actions: z.array(MacOSNotificationActionSchema).default([]),\n  templates: z\n    .object({\n      notification: MacOSNotificationTemplateSchema.default({}),\n      session_end: MacOSNotificationTemplateSchema.default({}),\n    })\n    .default({}),\n});\nexport type MacOSNotifierConfig = z.infer<typeof MacOSNotifierConfigSchema>;\n\n// ==================== Notifiers Config ====================\n\nexport const NotifiersConfigSchema = z.object({\n  webhook: WebhookNotifierConfigSchema.optional(),\n  macos: MacOSNotifierConfigSchema.default({}),\n});\nexport type NotifiersConfig = z.infer<typeof NotifiersConfigSchema>;\n\n// ==================== Root Config ====================\n\nexport const ConfigSchema = z.object({\n  logging: LoggingConfigSchema.default({}),\n  events: EventsConfigSchema.default({}),\n  notifiers: NotifiersConfigSchema,\n});\nexport type Config = z.infer<typeof ConfigSchema>;\n\n// ==================== Default Config ====================\n\nexport const DEFAULT_CONFIG: Config = {\n  logging: {\n    level: \"info\",\n    directory: \"~/.claude/webhook-notifier/logs\",\n    format: \"json\",\n    rotation: \"daily\",\n  },\n  events: {\n    notification: {\n      enabled: true,\n      extract_context: true,\n      context_length: 200,\n    },\n    session_end: {\n      enabled: true,\n    },\n  },\n  notifiers: {\n    macos: {\n      enabled: false,\n      title: \"Claude Code\",\n      sound: \"default\",\n      actions: [],\n      templates: {\n        notification: {\n          title: \"{{title}}\",\n          subtitle: \"\u7B49\u5F85 {{message_type}}\",\n          message: \"{{last_message}}\",\n        },\n        session_end: {\n          title: \"{{title}}\",\n          subtitle: \"\u4F1A\u8BDD\u7ED3\u675F\",\n          message: \"\u539F\u56E0: {{reason}}\",\n        },\n      },\n    },\n  },\n};\n", "/**\n * Logger System\n * Supports both JSON and text formats with daily rotation\n */\nimport { existsSync, mkdirSync, appendFileSync } from \"node:fs\";\nimport { join } from \"node:path\";\nimport type { ConfigManager } from \"./config.js\";\nimport type { LogLevel, LogFormat } from \"../types/config.js\";\n\ninterface LogEntry {\n  timestamp: string;\n  level: LogLevel;\n  message: string;\n  meta?: any;\n}\n\nexport class Logger {\n  private logDir: string;\n  private logLevel: LogLevel;\n  private logFormat: LogFormat;\n\n  private readonly levelPriority: Record<LogLevel, number> = {\n    debug: 0,\n    info: 1,\n    warn: 2,\n    error: 3,\n  };\n\n  constructor(private config: ConfigManager) {\n    this.logDir = this.config.getLogDirectory();\n    this.logLevel = this.config.get<LogLevel>(\"logging.level\");\n    this.logFormat = this.config.get<LogFormat>(\"logging.format\");\n\n    this.ensureLogDirectory();\n  }\n\n  /**\n   * \u786E\u4FDD\u65E5\u5FD7\u76EE\u5F55\u5B58\u5728\n   */\n  private ensureLogDirectory(): void {\n    if (!existsSync(this.logDir)) {\n      mkdirSync(this.logDir, { recursive: true });\n    }\n  }\n\n  /**\n   * \u68C0\u67E5\u662F\u5426\u5E94\u8BE5\u8BB0\u5F55\u8BE5\u7EA7\u522B\u7684\u65E5\u5FD7\n   */\n  private shouldLog(level: LogLevel): boolean {\n    return this.levelPriority[level] >= this.levelPriority[this.logLevel];\n  }\n\n  /**\n   * \u83B7\u53D6\u5F53\u524D\u65E5\u671F\u5B57\u7B26\u4E32\uFF08\u7528\u4E8E\u65E5\u5FD7\u6587\u4EF6\u540D\uFF09\n   */\n  private getDateString(): string {\n    const now = new Date();\n    return now.toISOString().split(\"T\")[0] ?? \"unknown\";\n  }\n\n  /**\n   * \u683C\u5F0F\u5316\u65E5\u5FD7\u6761\u76EE\n   */\n  private formatLogEntry(entry: LogEntry): string {\n    if (this.logFormat === \"json\") {\n      return JSON.stringify(entry);\n    }\n\n    // Text format\n    let line = `[${entry.timestamp}] ${entry.level.toUpperCase()}: ${entry.message}`;\n\n    if (entry.meta) {\n      line += `\\n  Meta: ${JSON.stringify(entry.meta, null, 2)}`;\n    }\n\n    return line;\n  }\n\n  /**\n   * \u5199\u5165\u65E5\u5FD7\n   */\n  private writeLog(level: LogLevel, message: string, meta?: any): void {\n    if (!this.shouldLog(level)) {\n      return;\n    }\n\n    const entry: LogEntry = {\n      timestamp: new Date().toISOString(),\n      level,\n      message,\n      meta,\n    };\n\n    const formattedLog = this.formatLogEntry(entry);\n\n    // \u5199\u5165\u65E5\u5FD7\u6587\u4EF6\uFF08\u6309\u65E5\u671F\u5206\u6587\u4EF6\uFF09\n    const dateStr = this.getDateString();\n    const logFile = join(this.logDir, `${dateStr}.log`);\n\n    try {\n      appendFileSync(logFile, formattedLog + \"\\n\");\n    } catch (error) {\n      // \u5199\u5165\u65E5\u5FD7\u5931\u8D25\uFF0C\u8F93\u51FA\u5230 stderr\n      console.error(\"Failed to write log:\", error);\n    }\n\n    // \u9519\u8BEF\u65E5\u5FD7\u989D\u5916\u5199\u5165 errors.log\n    if (level === \"error\") {\n      const errorFile = join(this.logDir, \"errors.log\");\n      try {\n        appendFileSync(errorFile, formattedLog + \"\\n\");\n      } catch (error) {\n        console.error(\"Failed to write error log:\", error);\n      }\n    }\n  }\n\n  /**\n   * Debug \u65E5\u5FD7\n   */\n  debug(message: string, meta?: any): void {\n    this.writeLog(\"debug\", message, meta);\n  }\n\n  /**\n   * Info \u65E5\u5FD7\n   */\n  info(message: string, meta?: any): void {\n    this.writeLog(\"info\", message, meta);\n  }\n\n  /**\n   * Warning \u65E5\u5FD7\n   */\n  warn(message: string, meta?: any): void {\n    this.writeLog(\"warn\", message, meta);\n  }\n\n  /**\n   * Error \u65E5\u5FD7\n   */\n  error(message: string, meta?: any): void {\n    this.writeLog(\"error\", message, meta);\n\n    // \u5BF9\u4E8E\u9519\u8BEF\uFF0C\u540C\u65F6\u8F93\u51FA\u5230 stderr\n    console.error(`[ERROR] ${message}`, meta || \"\");\n  }\n\n  /**\n   * \u83B7\u53D6\u65E5\u5FD7\u6587\u4EF6\u8DEF\u5F84\n   */\n  getLogFilePath(date?: string): string {\n    const dateStr = date || this.getDateString();\n    return join(this.logDir, `${dateStr}.log`);\n  }\n\n  /**\n   * \u83B7\u53D6\u9519\u8BEF\u65E5\u5FD7\u6587\u4EF6\u8DEF\u5F84\n   */\n  getErrorLogPath(): string {\n    return join(this.logDir, \"errors.log\");\n  }\n}\n", "/**\n * Context Extractor\n * \u4ECE transcript \u6587\u4EF6\u63D0\u53D6\u6700\u540E\u4E00\u6761 assistant \u6D88\u606F\u548C\u6D88\u606F\u7C7B\u578B\n */\nimport { existsSync, readFileSync } from \"node:fs\";\nimport type { ExtractedContext, MessageType } from \"../types/hook-events.js\";\n\ninterface TranscriptEntry {\n  role: \"user\" | \"assistant\";\n  content: string;\n  [key: string]: any;\n}\n\nexport class ContextExtractor {\n  /**\n   * \u4ECE transcript \u6587\u4EF6\u63D0\u53D6\u4E0A\u4E0B\u6587\n   */\n  async extract(\n    transcriptPath: string,\n    maxLength: number = 200,\n  ): Promise<ExtractedContext | null> {\n    if (!existsSync(transcriptPath)) {\n      return null;\n    }\n\n    try {\n      // \u8BFB\u53D6\u6587\u4EF6\u6700\u540E N \u884C\uFF08\u63D0\u9AD8\u6027\u80FD\uFF09\n      const content = readFileSync(transcriptPath, \"utf-8\");\n      const lines = content.trim().split(\"\\n\");\n\n      // \u4ECE\u540E\u5F80\u524D\u67E5\u627E\u6700\u540E\u4E00\u6761 assistant \u6D88\u606F\n      for (let i = lines.length - 1; i >= 0; i--) {\n        try {\n          const line = lines[i];\n          if (!line) continue;\n          const entry: TranscriptEntry = JSON.parse(line);\n\n          if (entry.role === \"assistant\" && entry.content) {\n            const lastMessage = this.truncate(entry.content, maxLength);\n            const messageType = this.detectMessageType(lastMessage);\n\n            return {\n              last_message: lastMessage,\n              message_type: messageType,\n            };\n          }\n        } catch {\n          // \u8DF3\u8FC7\u89E3\u6790\u5931\u8D25\u7684\u884C\n          continue;\n        }\n      }\n\n      return null;\n    } catch (error) {\n      console.error(\"Failed to extract context:\", error);\n      return null;\n    }\n  }\n\n  /**\n   * \u622A\u65AD\u6D88\u606F\u5230\u6307\u5B9A\u957F\u5EA6\n   */\n  private truncate(text: string, maxLength: number): string {\n    if (text.length <= maxLength) {\n      return text;\n    }\n\n    return text.slice(0, maxLength) + \"...\";\n  }\n\n  /**\n   * \u68C0\u6D4B\u6D88\u606F\u7C7B\u578B\n   */\n  private detectMessageType(message: string): MessageType {\n    const lowerMessage = message.toLowerCase();\n\n    // 1. Question: \u5305\u542B\u95EE\u53F7\u6216\u7591\u95EE\u8BCD\n    if (\n      /[?\uFF1F]/.test(message) ||\n      /\\b(how|what|why|when|where|which|who|\u5417|\u5462|\u5982\u4F55|\u600E\u4E48|\u4EC0\u4E48|\u54EA|\u4E3A\u4EC0\u4E48|\u4EC0\u4E48\u65F6\u5019|\u54EA\u91CC)\\b/i.test(\n        lowerMessage,\n      )\n    ) {\n      return \"question\";\n    }\n\n    // 2. Confirmation: \u5305\u542B\u786E\u8BA4\u76F8\u5173\u8BCD\n    if (\n      /\\b(\u662F\u5426|\u540C\u610F|\u786E\u8BA4|\u53EF\u4EE5\u5417|\u9700\u8981\u5417|\u8981\u4E0D\u8981|approve|confirm|agree|okay|ok)\\b/i.test(\n        lowerMessage,\n      )\n    ) {\n      return \"confirmation\";\n    }\n\n    // 3. Choice: \u5305\u542B\u9009\u9879\u6807\u8BB0\n    if (\n      /\\b([0-9]\\.|\u9009\u62E9|\u6216\u8005|\u8FD8\u662F|option|choose|select)\\b/i.test(lowerMessage)\n    ) {\n      return \"choice\";\n    }\n\n    // 4. Info: \u9ED8\u8BA4\u4E3A\u666E\u901A\u4FE1\u606F\n    return \"info\";\n  }\n}\n", "/**\n * Base Notifier\n * \u6240\u6709\u901A\u77E5\u5668\u7684\u62BD\u8C61\u57FA\u7C7B\n */\nimport type { ConfigManager } from \"../core/config.js\";\nimport type { Logger } from \"../core/logger.js\";\nimport type { EventType } from \"../types/hook-events.js\";\nimport type { NotificationResult } from \"../types/payload.js\";\n\nexport abstract class BaseNotifier {\n  constructor(\n    protected config: ConfigManager,\n    protected logger: Logger,\n  ) {}\n\n  /**\n   * \u68C0\u67E5\u901A\u77E5\u5668\u662F\u5426\u542F\u7528\n   */\n  abstract isEnabled(): boolean;\n\n  /**\n   * \u53D1\u9001\u901A\u77E5\n   */\n  abstract send(event: EventType): Promise<NotificationResult>;\n\n  /**\n   * \u83B7\u53D6\u901A\u77E5\u5668\u540D\u79F0\n   */\n  abstract getName(): string;\n}\n", "/**\n * Git Information Extractor\n * \u63D0\u53D6\u9879\u76EE\u7684 Git \u5143\u6570\u636E\n */\nimport { execSync } from \"node:child_process\";\nimport { existsSync } from \"node:fs\";\nimport { join } from \"node:path\";\nimport type { GitInfo } from \"../types/payload.js\";\n\nexport class GitExtractor {\n  /**\n   * \u4ECE\u9879\u76EE\u76EE\u5F55\u63D0\u53D6 Git \u4FE1\u606F\n   */\n  extract(projectDir: string): GitInfo {\n    // \u68C0\u67E5\u662F\u5426\u662F Git \u4ED3\u5E93\n    if (!this.isGitRepository(projectDir)) {\n      return {\n        branch: null,\n        repo: null,\n        commit: null,\n      };\n    }\n\n    return {\n      branch: this.getBranch(projectDir),\n      repo: this.getRemoteUrl(projectDir),\n      commit: this.getCommitHash(projectDir),\n    };\n  }\n\n  /**\n   * \u68C0\u67E5\u662F\u5426\u662F Git \u4ED3\u5E93\n   */\n  private isGitRepository(projectDir: string): boolean {\n    return existsSync(join(projectDir, \".git\"));\n  }\n\n  /**\n   * \u83B7\u53D6\u5F53\u524D\u5206\u652F\u540D\n   */\n  private getBranch(projectDir: string): string | null {\n    try {\n      const branch = execSync(\"git rev-parse --abbrev-ref HEAD\", {\n        cwd: projectDir,\n        encoding: \"utf-8\",\n      }).trim();\n\n      return branch || null;\n    } catch {\n      return null;\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u8FDC\u7A0B\u4ED3\u5E93 URL\n   */\n  private getRemoteUrl(projectDir: string): string | null {\n    try {\n      const url = execSync(\"git config --get remote.origin.url\", {\n        cwd: projectDir,\n        encoding: \"utf-8\",\n      }).trim();\n\n      return url || null;\n    } catch {\n      return null;\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u5F53\u524D commit hash\uFF08\u77ED\u7248\u672C\uFF09\n   */\n  private getCommitHash(projectDir: string): string | null {\n    try {\n      const hash = execSync(\"git rev-parse --short HEAD\", {\n        cwd: projectDir,\n        encoding: \"utf-8\",\n      }).trim();\n\n      return hash || null;\n    } catch {\n      return null;\n    }\n  }\n}\n", "/**\n * Webhook Notifier\n * \u53D1\u9001 HTTP POST \u8BF7\u6C42\u5230\u914D\u7F6E\u7684 webhook URL\n */\nimport type { ConfigManager } from \"../core/config.js\";\nimport type { Logger } from \"../core/logger.js\";\nimport type { EventType } from \"../types/hook-events.js\";\nimport type {\n  NotificationPayload,\n  NotificationResult,\n  ProjectInfo,\n  SessionEndPayload,\n} from \"../types/payload.js\";\nimport { BaseNotifier } from \"./base.js\";\nimport { GitExtractor } from \"../extractors/git.js\";\nimport type { RetryConfig, WebhookNotifierConfig } from \"../types/config.js\";\n\nexport class WebhookNotifier extends BaseNotifier {\n  private gitExtractor: GitExtractor;\n\n  constructor(config: ConfigManager, logger: Logger) {\n    super(config, logger);\n    this.gitExtractor = new GitExtractor();\n  }\n\n  isEnabled(): boolean {\n    return (\n      this.config.has(\"notifiers.webhook\") &&\n      this.config.get<boolean>(\"notifiers.webhook.enabled\")\n    );\n  }\n\n  getName(): string {\n    return \"webhook\";\n  }\n\n  async send(event: EventType): Promise<NotificationResult> {\n    const webhookConfig =\n      this.config.get<WebhookNotifierConfig>(\"notifiers.webhook\");\n\n    if (!webhookConfig) {\n      return {\n        success: false,\n        notifier: \"webhook\",\n        error: new Error(\"Webhook configuration not found\"),\n      };\n    }\n\n    try {\n      const payload = this.buildPayload(event, webhookConfig);\n      this.logger.debug(\"Webhook payload\", payload);\n\n      const response = await this.sendWithRetry(\n        webhookConfig.url,\n        payload,\n        webhookConfig.timeout,\n        webhookConfig.retry,\n        webhookConfig.headers,\n      );\n\n      this.logger.info(`Webhook sent successfully (HTTP ${response.status})`);\n\n      return {\n        success: true,\n        notifier: \"webhook\",\n        response: {\n          status: response.status,\n          statusText: response.statusText,\n        },\n      };\n    } catch (error) {\n      this.logger.error(\"Webhook send failed\", {\n        error: error instanceof Error ? error.message : String(error),\n      });\n\n      return {\n        success: false,\n        notifier: \"webhook\",\n        error: error instanceof Error ? error : new Error(String(error)),\n      };\n    }\n  }\n\n  /**\n   * \u53D1\u9001 HTTP \u8BF7\u6C42\uFF08\u5E26\u91CD\u8BD5\uFF09\n   */\n  private async sendWithRetry(\n    url: string,\n    payload: any,\n    timeout: number,\n    retryConfig: RetryConfig,\n    headers: Record<string, string> = {},\n  ): Promise<Response> {\n    if (!retryConfig.enabled) {\n      return this.sendRequest(url, payload, timeout, headers);\n    }\n\n    let lastError: Error | null = null;\n\n    for (let attempt = 1; attempt <= retryConfig.max_attempts; attempt++) {\n      try {\n        this.logger.debug(\n          `Webhook attempt ${attempt}/${retryConfig.max_attempts}`,\n        );\n        return await this.sendRequest(url, payload, timeout, headers);\n      } catch (error) {\n        lastError = error instanceof Error ? error : new Error(String(error));\n\n        if (attempt < retryConfig.max_attempts) {\n          const delay = this.calculateBackoff(attempt, retryConfig.backoff);\n          this.logger.warn(\n            `Webhook attempt ${attempt} failed, retrying in ${delay}ms`,\n            { error: lastError.message },\n          );\n          await this.sleep(delay);\n        }\n      }\n    }\n\n    throw lastError || new Error(\"Webhook send failed\");\n  }\n\n  /**\n   * \u53D1\u9001\u5355\u6B21 HTTP \u8BF7\u6C42\n   */\n  private async sendRequest(\n    url: string,\n    payload: any,\n    timeout: number,\n    headers: Record<string, string> = {},\n  ): Promise<Response> {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeout * 1000);\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"User-Agent\": \"Claude-Code-Webhook-Notifier/2.0\",\n          ...headers,\n        },\n        body: JSON.stringify(payload),\n        signal: controller.signal,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      return response;\n    } finally {\n      clearTimeout(timeoutId);\n    }\n  }\n\n  /**\n   * \u8BA1\u7B97\u9000\u907F\u5EF6\u8FDF\n   */\n  private calculateBackoff(\n    attempt: number,\n    strategy: \"linear\" | \"exponential\",\n  ): number {\n    if (strategy === \"linear\") {\n      return attempt * 1000; // 1s, 2s, 3s, ...\n    } else {\n      return Math.pow(2, attempt - 1) * 1000; // 1s, 2s, 4s, 8s, ...\n    }\n  }\n\n  /**\n   * \u7761\u7720\u6307\u5B9A\u6BEB\u79D2\u6570\n   */\n  private sleep(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  /**\n   * \u6784\u5EFA payload\n   */\n  private buildPayload(\n    event: EventType,\n    config: WebhookNotifierConfig,\n  ): NotificationPayload | SessionEndPayload {\n    const timestamp = new Date().toISOString();\n    const source = \"claude-code-webhook-notifier\";\n\n    if (event.type === \"notification\") {\n      const payload: NotificationPayload = {\n        event: \"notification\",\n        timestamp,\n        source,\n        notification_type: event.input.notification_type || \"waiting_for_input\",\n        message: event.input.message,\n      };\n\n      // \u6DFB\u52A0\u53EF\u9009\u5B57\u6BB5\n      if (config.payload.include.includes(\"context\") && event.context) {\n        payload.context = event.context;\n      }\n\n      if (config.payload.include.includes(\"session_id\")) {\n        payload.session = {\n          id: event.input.session_id,\n        };\n      }\n\n      if (config.payload.include.includes(\"project_info\")) {\n        payload.project = this.extractProjectInfo(event);\n      }\n\n      // \u5408\u5E76\u81EA\u5B9A\u4E49\u5B57\u6BB5\n      return {\n        ...payload,\n        ...config.payload.custom_fields,\n      };\n    } else {\n      const payload: SessionEndPayload = {\n        event: \"session_end\",\n        timestamp,\n        source,\n        session: {\n          id: event.input.session_id,\n          reason: \"reason\" in event.input ? event.input.reason : \"stopped\",\n        },\n      };\n\n      if (config.payload.include.includes(\"transcript_path\")) {\n        payload.session.transcript_path = event.input.transcript_path;\n      }\n\n      if (config.payload.include.includes(\"project_info\")) {\n        payload.project = this.extractProjectInfo(event);\n      }\n\n      // \u5408\u5E76\u81EA\u5B9A\u4E49\u5B57\u6BB5\n      return {\n        ...payload,\n        ...config.payload.custom_fields,\n      };\n    }\n  }\n\n  /**\n   * \u63D0\u53D6\u9879\u76EE\u4FE1\u606F\n   */\n  private extractProjectInfo(event: EventType): ProjectInfo {\n    const projectDir = process.env.CLAUDE_PROJECT_DIR || event.input.cwd;\n    const gitInfo = this.gitExtractor.extract(projectDir);\n\n    return {\n      directory: projectDir,\n      git: gitInfo,\n    };\n  }\n}\n", "/**\n * macOS Notifier\n * \u4F7F\u7528 node-notifier \u53D1\u9001\u7CFB\u7EDF\u901A\u77E5\n */\nimport notifier from \"node-notifier\";\nimport { exec } from \"node:child_process\";\nimport { promisify } from \"node:util\";\nimport type { ConfigManager } from \"../core/config.js\";\nimport type { Logger } from \"../core/logger.js\";\nimport type { EventType } from \"../types/hook-events.js\";\nimport type { NotificationResult } from \"../types/payload.js\";\nimport { BaseNotifier } from \"./base.js\";\nimport type { MacOSNotifierConfig } from \"../types/config.js\";\n\nconst execAsync = promisify(exec);\n\ninterface NotificationContent {\n  title: string;\n  subtitle?: string;\n  message: string;\n}\n\nexport class MacOSNotifier extends BaseNotifier {\n  isEnabled(): boolean {\n    return (\n      process.platform === \"darwin\" &&\n      this.config.get<boolean>(\"notifiers.macos.enabled\")\n    );\n  }\n\n  getName(): string {\n    return \"macos\";\n  }\n\n  async send(event: EventType): Promise<NotificationResult> {\n    if (!this.isEnabled()) {\n      return {\n        success: false,\n        notifier: \"macos\",\n        error: new Error(\n          \"macOS notifier is not enabled or not on macOS platform\",\n        ),\n      };\n    }\n\n    const macosConfig = this.config.get<MacOSNotifierConfig>(\"notifiers.macos\");\n\n    try {\n      const content = this.formatNotification(event, macosConfig);\n      await this.sendNotification(content, macosConfig);\n\n      this.logger.info(\"macOS notification sent successfully\");\n\n      return {\n        success: true,\n        notifier: \"macos\",\n      };\n    } catch (error) {\n      this.logger.error(\"macOS notification failed\", {\n        error: error instanceof Error ? error.message : String(error),\n      });\n\n      return {\n        success: false,\n        notifier: \"macos\",\n        error: error instanceof Error ? error : new Error(String(error)),\n      };\n    }\n  }\n\n  /**\n   * \u53D1\u9001\u7CFB\u7EDF\u901A\u77E5\n   */\n  private sendNotification(\n    content: NotificationContent,\n    config: MacOSNotifierConfig,\n  ): Promise<void> {\n    return new Promise((resolve, reject) => {\n      notifier.notify(\n        {\n          title: content.title,\n          subtitle: content.subtitle,\n          message: content.message,\n          sound: config.sound,\n          wait: true, // \u7B49\u5F85\u7528\u6237\u4EA4\u4E92\n          actions: config.actions?.map((a) => a.label) || [],\n        },\n        (err, response, metadata) => {\n          if (err) {\n            reject(err);\n            return;\n          }\n\n          // \u5904\u7406\u70B9\u51FB\u56DE\u8C03\n          if (\n            metadata?.activationType === \"actionClicked\" &&\n            metadata.activationValue\n          ) {\n            this.handleAction(metadata.activationValue, config);\n          }\n\n          resolve();\n        },\n      );\n    });\n  }\n\n  /**\n   * \u5904\u7406\u901A\u77E5\u52A8\u4F5C\u70B9\u51FB\n   */\n  private handleAction(actionLabel: string, config: MacOSNotifierConfig): void {\n    const action = config.actions?.find((a) => a.label === actionLabel);\n\n    if (action?.command) {\n      this.logger.debug(`Executing action command: ${action.command}`);\n\n      execAsync(action.command).catch((error) => {\n        this.logger.error(\"Action command failed\", {\n          command: action.command,\n          error: error.message,\n        });\n      });\n    }\n  }\n\n  /**\n   * \u683C\u5F0F\u5316\u901A\u77E5\u5185\u5BB9\n   */\n  private formatNotification(\n    event: EventType,\n    config: MacOSNotifierConfig,\n  ): NotificationContent {\n    if (event.type === \"notification\") {\n      const template = config.templates?.notification || {\n        title: config.title,\n        subtitle: \"\u7B49\u5F85\u8F93\u5165\",\n        message: \"{{message}}\",\n      };\n\n      const variables = {\n        title: config.title,\n        message_type: event.context?.message_type || \"input\",\n        last_message: event.context?.last_message || event.input.message,\n        message: event.input.message,\n      };\n\n      return {\n        title: this.renderTemplate(template.title, variables),\n        subtitle: template.subtitle\n          ? this.renderTemplate(template.subtitle, variables)\n          : undefined,\n        message: this.renderTemplate(template.message, variables),\n      };\n    } else {\n      const template = config.templates?.session_end || {\n        title: config.title,\n        subtitle: \"\u4F1A\u8BDD\u7ED3\u675F\",\n        message: \"\u539F\u56E0: {{reason}}\",\n      };\n\n      const variables = {\n        title: config.title,\n        reason: \"reason\" in event.input ? event.input.reason : \"stopped\",\n        session_id: event.input.session_id,\n      };\n\n      return {\n        title: this.renderTemplate(template.title, variables),\n        subtitle: template.subtitle\n          ? this.renderTemplate(template.subtitle, variables)\n          : undefined,\n        message: this.renderTemplate(template.message, variables),\n      };\n    }\n  }\n\n  /**\n   * \u6E32\u67D3\u6A21\u677F\u5B57\u7B26\u4E32\n   * \u652F\u6301 {{variable}} \u8BED\u6CD5\n   */\n  private renderTemplate(\n    template: string,\n    variables: Record<string, any>,\n  ): string {\n    return template.replace(/\\{\\{(\\w+)\\}\\}/g, (_, key) => {\n      return String(variables[key] || \"\");\n    });\n  }\n}\n", "/**\n * Hook Handler\n * \u5904\u7406\u6765\u81EA Claude Code \u7684 Hook \u4E8B\u4EF6\n */\nimport type { ConfigManager } from \"./config.js\";\nimport type { Logger } from \"./logger.js\";\nimport { ContextExtractor } from \"../extractors/context.js\";\nimport { WebhookNotifier, MacOSNotifier } from \"../notifiers/index.js\";\nimport type { BaseNotifier } from \"../notifiers/base.js\";\nimport type {\n  HookInput,\n  HookOutput,\n  NotificationInput,\n  SessionEndInput,\n  StopInput,\n  EventType,\n  NotificationEvent,\n  SessionEndEvent,\n} from \"../types/hook-events.js\";\n\nexport class HookHandler {\n  private contextExtractor: ContextExtractor;\n  private notifiers: BaseNotifier[];\n\n  constructor(\n    private config: ConfigManager,\n    private logger: Logger,\n  ) {\n    this.contextExtractor = new ContextExtractor();\n\n    // \u521D\u59CB\u5316\u6240\u6709\u901A\u77E5\u5668\n    this.notifiers = [\n      new WebhookNotifier(config, logger),\n      new MacOSNotifier(config, logger),\n    ];\n  }\n\n  /**\n   * \u5904\u7406 Hook \u4E8B\u4EF6\n   */\n  async handle(input: HookInput): Promise<HookOutput> {\n    this.logger.info(`Processing ${input.hook_event_name} event`, {\n      session_id: input.session_id,\n    });\n\n    try {\n      // \u9A8C\u8BC1\u8F93\u5165\n      this.validateInput(input);\n\n      // \u6839\u636E\u4E8B\u4EF6\u7C7B\u578B\u8DEF\u7531\n      const event = await this.createEvent(input);\n\n      if (!event) {\n        // \u4E0D\u652F\u6301\u7684\u4E8B\u4EF6\u7C7B\u578B\uFF0C\u9759\u9ED8\u5FFD\u7565\n        return { continue: true };\n      }\n\n      // \u5E76\u884C\u53D1\u9001\u6240\u6709\u542F\u7528\u7684\u901A\u77E5\n      const results = await this.sendNotifications(event);\n\n      // \u8BB0\u5F55\u7ED3\u679C\n      this.logResults(results);\n\n      // \u8FD4\u56DE\u8F93\u51FA\n      return this.createOutput(results);\n    } catch (error) {\n      this.logger.error(\"Hook handling failed\", {\n        error: error instanceof Error ? error.message : String(error),\n      });\n\n      // \u5373\u4F7F\u5931\u8D25\u4E5F\u7EE7\u7EED\u6267\u884C\uFF0C\u4E0D\u963B\u585E Claude\n      return { continue: true };\n    }\n  }\n\n  /**\n   * \u9A8C\u8BC1\u8F93\u5165\n   */\n  private validateInput(input: HookInput): void {\n    if (!input.session_id) {\n      throw new Error(\"session_id is required\");\n    }\n\n    if (!input.hook_event_name) {\n      throw new Error(\"hook_event_name is required\");\n    }\n  }\n\n  /**\n   * \u521B\u5EFA\u4E8B\u4EF6\u5BF9\u8C61\n   */\n  private async createEvent(input: HookInput): Promise<EventType | null> {\n    switch (input.hook_event_name) {\n      case \"Notification\":\n        return this.createNotificationEvent(input as NotificationInput);\n\n      case \"Stop\":\n      case \"SessionEnd\":\n        return this.createSessionEndEvent(input as SessionEndInput | StopInput);\n\n      default:\n        this.logger.warn(\n          `Unsupported event type: ${(input as HookInput).hook_event_name}`,\n        );\n        return null;\n    }\n  }\n\n  /**\n   * \u521B\u5EFA Notification \u4E8B\u4EF6\n   */\n  private async createNotificationEvent(\n    input: NotificationInput,\n  ): Promise<NotificationEvent | null> {\n    // \u68C0\u67E5\u662F\u5426\u542F\u7528\n    const enabled = this.config.get<boolean>(\"events.notification.enabled\");\n    if (!enabled) {\n      this.logger.debug(\"Notification events are disabled\");\n      return null;\n    }\n\n    const event: NotificationEvent = {\n      type: \"notification\",\n      input,\n    };\n\n    // \u63D0\u53D6\u4E0A\u4E0B\u6587\uFF08\u5982\u679C\u542F\u7528\uFF09\n    const extractContext = this.config.get<boolean>(\n      \"events.notification.extract_context\",\n    );\n    if (extractContext && input.transcript_path) {\n      const contextLength = this.config.get<number>(\n        \"events.notification.context_length\",\n      );\n      const context = await this.contextExtractor.extract(\n        input.transcript_path,\n        contextLength,\n      );\n\n      if (context) {\n        event.context = context;\n        this.logger.debug(\"Context extracted\", context);\n      } else {\n        this.logger.debug(\n          \"Failed to extract context, using basic notification\",\n        );\n      }\n    }\n\n    return event;\n  }\n\n  /**\n   * \u521B\u5EFA SessionEnd \u4E8B\u4EF6\n   */\n  private createSessionEndEvent(\n    input: SessionEndInput | StopInput,\n  ): SessionEndEvent | null {\n    // \u68C0\u67E5\u662F\u5426\u542F\u7528\n    const enabled = this.config.get<boolean>(\"events.session_end.enabled\");\n    if (!enabled) {\n      this.logger.debug(\"Session end events are disabled\");\n      return null;\n    }\n\n    return {\n      type: \"session_end\",\n      input,\n    };\n  }\n\n  /**\n   * \u53D1\u9001\u6240\u6709\u542F\u7528\u7684\u901A\u77E5\n   */\n  private async sendNotifications(event: EventType) {\n    const enabledNotifiers = this.notifiers.filter((n) => n.isEnabled());\n\n    if (enabledNotifiers.length === 0) {\n      this.logger.warn(\"No notifiers are enabled\");\n      return [];\n    }\n\n    this.logger.info(\n      `Sending notifications via ${enabledNotifiers.length} notifiers`,\n      {\n        notifiers: enabledNotifiers.map((n) => n.getName()),\n      },\n    );\n\n    // \u5E76\u884C\u53D1\u9001\n    const results = await Promise.allSettled(\n      enabledNotifiers.map((notifier) => notifier.send(event)),\n    );\n\n    return results.map((result, index) => ({\n      notifier: enabledNotifiers[index]?.getName(),\n      result,\n    }));\n  }\n\n  /**\n   * \u8BB0\u5F55\u7ED3\u679C\n   */\n  private logResults(\n    results: Array<{\n      notifier?: string;\n      result: PromiseSettledResult<any>;\n    }>,\n  ): void {\n    for (const { notifier, result } of results) {\n      if (result.status === \"fulfilled\") {\n        const value = result.value;\n        if (value.success) {\n          this.logger.info(`Notifier ${notifier} succeeded`);\n        } else {\n          this.logger.error(`Notifier ${notifier} failed`, {\n            error: value.error?.message,\n          });\n        }\n      } else {\n        this.logger.error(`Notifier ${notifier} threw exception`, {\n          error: result.reason,\n        });\n      }\n    }\n  }\n\n  /**\n   * \u521B\u5EFA\u8F93\u51FA\n   */\n  private createOutput(\n    results: Array<{\n      notifier?: string;\n      result: PromiseSettledResult<any>;\n    }>,\n  ): HookOutput {\n    // \u7EDF\u8BA1\u6210\u529F/\u5931\u8D25\u6570\n    const successCount = results.filter(\n      (r) => r.result.status === \"fulfilled\" && r.result.value.success,\n    ).length;\n\n    const totalCount = results.length;\n\n    // \u5373\u4F7F\u6240\u6709\u901A\u77E5\u5931\u8D25\uFF0C\u4E5F\u7EE7\u7EED\u6267\u884C\uFF08\u4E0D\u963B\u585E Claude\uFF09\n    return {\n      continue: true,\n      suppressOutput: true, // \u4E0D\u5728 transcript \u4E2D\u663E\u793A\n      systemMessage:\n        successCount === totalCount\n          ? undefined\n          : `Notifications: ${successCount}/${totalCount} succeeded`,\n    };\n  }\n}\n", "/**\n * CLI Test Command\n * \u6D4B\u8BD5\u901A\u77E5\u914D\u7F6E\n */\nimport type { NotificationInput } from \"../types/hook-events.js\";\nimport { ConfigManager } from \"../core/config.js\";\nimport { Logger } from \"../core/logger.js\";\nimport { HookHandler } from \"../core/hook-handler.js\";\n\nexport async function testCommand(options: {\n  notifier?: string;\n}): Promise<void> {\n  try {\n    console.log(\"\uD83E\uDDEA Testing notification configuration...\\n\");\n\n    // \u521D\u59CB\u5316\u914D\u7F6E\u548C\u65E5\u5FD7\n    const config = new ConfigManager();\n    const logger = new Logger(config);\n\n    // \u9A8C\u8BC1\u914D\u7F6E\n    const validation = config.validate();\n    if (!validation.valid) {\n      console.error(\"\u274C Configuration validation failed:\");\n      for (const error of validation.errors) {\n        console.error(`  - ${error}`);\n      }\n      process.exit(1);\n    }\n\n    console.log(\"\u2705 Configuration is valid\\n\");\n\n    // \u521B\u5EFA\u6D4B\u8BD5\u4E8B\u4EF6\n    const testEvent: NotificationInput = {\n      hook_event_name: \"Notification\",\n      session_id: \"test-cli-\" + Date.now(),\n      transcript_path: \"/tmp/test-transcript.jsonl\",\n      cwd: process.cwd(),\n      permission_mode: \"enabled\",\n    };\n\n    // \u5904\u7406\u6D4B\u8BD5\u4E8B\u4EF6\n    const handler = new HookHandler(config, logger);\n\n    console.log(\"\uD83D\uDCE4 Sending test notifications...\\n\");\n\n    const output = await handler.handle(testEvent);\n\n    if (output.continue) {\n      console.log(\"\u2705 Test completed successfully!\");\n      console.log(\n        \"\\n\uD83D\uDCA1 Check logs for details:\",\n        config.getLogDirectory() + \"/\",\n      );\n    } else {\n      console.error(\"\u274C Test failed\");\n      if (output.systemMessage) {\n        console.error(\"Error:\", output.systemMessage);\n      }\n      process.exit(1);\n    }\n  } catch (error) {\n    console.error(\"\u274C Test failed:\", error);\n    process.exit(1);\n  }\n}\n", "/**\n * CLI Config Command\n * \u914D\u7F6E\u7BA1\u7406\n */\nimport { existsSync, readFileSync, writeFileSync, copyFileSync } from \"node:fs\";\nimport { join } from \"node:path\";\nimport { stringify } from \"yaml\";\nimport { ConfigManager } from \"../core/config.js\";\nimport { DEFAULT_CONFIG } from \"../types/config.js\";\n\nexport async function configCommand(options: {\n  show?: boolean;\n  init?: boolean;\n  validate?: boolean;\n}): Promise<void> {\n  try {\n    if (options.init) {\n      await initConfig();\n    } else if (options.show) {\n      await showConfig();\n    } else if (options.validate) {\n      await validateConfig();\n    } else {\n      console.log(\"Please specify an option: --show, --init, or --validate\");\n      console.log(\"Example: webhook config --show\");\n    }\n  } catch (error) {\n    console.error(\"\u274C Config command failed:\", error);\n    process.exit(1);\n  }\n}\n\nasync function initConfig(): Promise<void> {\n  const configPath = join(process.cwd(), \".webhookrc.yaml\");\n\n  if (existsSync(configPath)) {\n    console.error(`\u274C Config file already exists: ${configPath}`);\n    console.log(\"\uD83D\uDCA1 Use --show to view current config\");\n    process.exit(1);\n  }\n\n  // \u751F\u6210\u9ED8\u8BA4\u914D\u7F6E\u6587\u4EF6\n  const yamlContent = stringify(DEFAULT_CONFIG);\n  writeFileSync(configPath, yamlContent, \"utf-8\");\n\n  console.log(\"\u2705 Configuration file created successfully!\");\n  console.log(`\uD83D\uDCC1 Location: ${configPath}`);\n  console.log(\"\\n\uD83D\uDCA1 Edit this file to customize your notification settings\");\n}\n\nasync function showConfig(): Promise<void> {\n  const config = new ConfigManager();\n  const configPath = config.getConfigPath();\n\n  if (!configPath) {\n    console.log(\"\u26A0\uFE0F  Using default configuration (no config file found)\");\n    console.log(\"\\n\uD83D\uDCA1 Run 'webhook config --init' to create a config file\\n\");\n  } else {\n    console.log(`\uD83D\uDCC1 Config file: ${configPath}\\n`);\n  }\n\n  console.log(\"\uD83D\uDCCB Current configuration:\");\n  console.log(\"\u2500\".repeat(60));\n\n  const fullConfig = config.getConfig();\n\n  // \u683C\u5F0F\u5316\u663E\u793A\u914D\u7F6E\n  console.log(\"\\n\uD83D\uDD27 Logging:\");\n  console.log(`  Level: ${fullConfig.logging.level}`);\n  console.log(`  Directory: ${config.getLogDirectory()}`);\n  console.log(`  Format: ${fullConfig.logging.format}`);\n  console.log(`  Rotation: ${fullConfig.logging.rotation}`);\n\n  console.log(\"\\n\uD83D\uDCCC Events:\");\n  console.log(\n    `  Notification: ${fullConfig.events.notification.enabled ? \"\u2705 Enabled\" : \"\u274C Disabled\"}`,\n  );\n  if (fullConfig.events.notification.enabled) {\n    console.log(\n      `    Extract Context: ${fullConfig.events.notification.extract_context}`,\n    );\n    console.log(\n      `    Context Length: ${fullConfig.events.notification.context_length}`,\n    );\n  }\n  console.log(\n    `  Session End: ${fullConfig.events.session_end.enabled ? \"\u2705 Enabled\" : \"\u274C Disabled\"}`,\n  );\n\n  console.log(\"\\n\uD83D\uDD14 Notifiers:\");\n\n  if (fullConfig.notifiers.webhook) {\n    const webhook = fullConfig.notifiers.webhook;\n    console.log(`  Webhook: ${webhook.enabled ? \"\u2705 Enabled\" : \"\u274C Disabled\"}`);\n    if (webhook.enabled) {\n      console.log(`    URL: ${webhook.url}`);\n      console.log(`    Timeout: ${webhook.timeout}s`);\n      console.log(`    Max Attempts: ${webhook.retry.max_attempts}`);\n      console.log(`    Backoff: ${webhook.retry.backoff}`);\n    }\n  }\n\n  const macos = fullConfig.notifiers.macos;\n  console.log(`  macOS: ${macos.enabled ? \"\u2705 Enabled\" : \"\u274C Disabled\"}`);\n  if (macos.enabled) {\n    console.log(`    Title: ${macos.title}`);\n    console.log(`    Sound: ${macos.sound}`);\n    console.log(`    Actions: ${macos.actions.length} configured`);\n  }\n\n  console.log(\"\\n\" + \"\u2500\".repeat(60));\n}\n\nasync function validateConfig(): Promise<void> {\n  console.log(\"\uD83D\uDD0D Validating configuration...\\n\");\n\n  const config = new ConfigManager();\n  const validation = config.validate();\n\n  if (validation.valid) {\n    console.log(\"\u2705 Configuration is valid!\");\n    const configPath = config.getConfigPath();\n    if (configPath) {\n      console.log(`\uD83D\uDCC1 Config file: ${configPath}`);\n    }\n  } else {\n    console.error(\"\u274C Configuration validation failed:\\n\");\n    for (const error of validation.errors) {\n      console.error(`  - ${error}`);\n    }\n    process.exit(1);\n  }\n}\n", "/**\n * CLI Logs Command\n * \u67E5\u770B\u901A\u77E5\u65E5\u5FD7\n */\nimport { readFileSync, readdirSync, statSync, existsSync } from \"node:fs\";\nimport { join } from \"node:path\";\nimport { ConfigManager } from \"../core/config.js\";\n\ninterface LogEntry {\n  timestamp: string;\n  level: string;\n  message: string;\n  meta?: any;\n}\n\nexport async function logsCommand(options: {\n  lines?: string;\n  follow?: boolean;\n  level?: string;\n}): Promise<void> {\n  try {\n    const config = new ConfigManager();\n    const logDir = config.getLogDirectory();\n\n    if (!existsSync(logDir)) {\n      console.error(`\u274C Log directory not found: ${logDir}`);\n      console.log(\"\\n\uD83D\uDCA1 No logs have been generated yet\");\n      process.exit(1);\n    }\n\n    const lines = Number.parseInt(options.lines || \"20\", 10);\n    const levelFilter = options.level?.toLowerCase();\n\n    if (options.follow) {\n      console.log(\"\u26A0\uFE0F  Follow mode not implemented yet\");\n      console.log(\"\uD83D\uDCA1 Use --lines to view recent logs instead\");\n      return;\n    }\n\n    // \u83B7\u53D6\u6700\u65B0\u7684\u65E5\u5FD7\u6587\u4EF6\n    const logFiles = readdirSync(logDir)\n      .filter((f) => f.endsWith(\".log\") && !f.includes(\"errors\"))\n      .map((f) => ({\n        name: f,\n        path: join(logDir, f),\n        mtime: statSync(join(logDir, f)).mtime,\n      }))\n      .sort((a, b) => b.mtime.getTime() - a.mtime.getTime());\n\n    if (logFiles.length === 0) {\n      console.log(\"\u2139\uFE0F  No log files found\");\n      return;\n    }\n\n    const latestLog = logFiles[0];\n    console.log(`\uD83D\uDCCB Viewing: ${latestLog.name}`);\n    console.log(`\uD83D\uDCC1 Location: ${logDir}`);\n    console.log(\"\u2500\".repeat(80));\n    console.log();\n\n    // \u8BFB\u53D6\u65E5\u5FD7\u5185\u5BB9\n    const content = readFileSync(latestLog.path, \"utf-8\");\n    const allLines = content.trim().split(\"\\n\").filter(Boolean);\n\n    // \u89E3\u6790\u5E76\u8FC7\u6EE4\u65E5\u5FD7\n    let logEntries: LogEntry[] = [];\n\n    for (const line of allLines) {\n      try {\n        const entry: LogEntry = JSON.parse(line);\n\n        // \u7EA7\u522B\u8FC7\u6EE4\n        if (levelFilter && entry.level.toLowerCase() !== levelFilter) {\n          continue;\n        }\n\n        logEntries.push(entry);\n      } catch {\n        // \u975E JSON \u683C\u5F0F\u7684\u884C\uFF0C\u76F4\u63A5\u663E\u793A\n        logEntries.push({\n          timestamp: \"\",\n          level: \"info\",\n          message: line,\n        });\n      }\n    }\n\n    // \u53EA\u663E\u793A\u6700\u540E N \u884C\n    const displayLines = logEntries.slice(-lines);\n\n    // \u683C\u5F0F\u5316\u8F93\u51FA\n    for (const entry of displayLines) {\n      const levelIcon = getLevelIcon(entry.level);\n      const timestamp = entry.timestamp\n        ? new Date(entry.timestamp).toLocaleString()\n        : \"\";\n\n      let output = `${levelIcon} ${timestamp} ${entry.message}`;\n\n      if (entry.meta) {\n        output += `\\n   ${JSON.stringify(entry.meta)}`;\n      }\n\n      console.log(output);\n    }\n\n    console.log();\n    console.log(\"\u2500\".repeat(80));\n    console.log(\n      `Showing last ${displayLines.length} of ${logEntries.length} entries`,\n    );\n\n    if (levelFilter) {\n      console.log(`Filtered by level: ${levelFilter}`);\n    }\n  } catch (error) {\n    console.error(\"\u274C Failed to read logs:\", error);\n    process.exit(1);\n  }\n}\n\nfunction getLevelIcon(level: string): string {\n  switch (level.toLowerCase()) {\n    case \"error\":\n      return \"\u274C\";\n    case \"warn\":\n      return \"\u26A0\uFE0F \";\n    case \"info\":\n      return \"\u2139\uFE0F \";\n    case \"debug\":\n      return \"\uD83D\uDD0D\";\n    default:\n      return \"  \";\n  }\n}\n"],
  "mappings": "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",
  "names": ["import_node_process", "import_commander", "import_node_process", "import_node_fs", "import_node_os", "import_node_path", "import_yaml", "import_zod", "LogLevelSchema", "LogFormatSchema", "LogRotationSchema", "LoggingConfigSchema", "NotificationEventConfigSchema", "SessionEndEventConfigSchema", "EventsConfigSchema", "RetryBackoffSchema", "RetryConfigSchema", "PayloadConfigSchema", "WebhookNotifierConfigSchema", "MacOSNotificationActionSchema", "MacOSNotificationTemplateSchema", "MacOSNotifierConfigSchema", "NotifiersConfigSchema", "ConfigSchema", "DEFAULT_CONFIG", "ConfigManager", "configPath", "result", "searchPaths", "path", "error", "DEFAULT_CONFIG", "content", "rawConfig", "parseYAML", "processed", "ConfigSchema", "obj", "_", "key", "value", "item", "parts", "part", "errors", "webhook", "logDir", "import_node_fs", "import_node_path", "Logger", "config", "level", "entry", "line", "message", "meta", "formattedLog", "dateStr", "logFile", "error", "errorFile", "date", "import_node_fs", "ContextExtractor", "transcriptPath", "maxLength", "lines", "i", "line", "entry", "lastMessage", "messageType", "error", "text", "message", "lowerMessage", "BaseNotifier", "config", "logger", "import_node_child_process", "import_node_fs", "import_node_path", "GitExtractor", "projectDir", "WebhookNotifier", "BaseNotifier", "config", "logger", "GitExtractor", "event", "webhookConfig", "payload", "response", "error", "url", "timeout", "retryConfig", "headers", "lastError", "attempt", "delay", "controller", "timeoutId", "strategy", "ms", "resolve", "timestamp", "source", "projectDir", "gitInfo", "import_node_notifier", "import_node_child_process", "import_node_util", "execAsync", "MacOSNotifier", "BaseNotifier", "event", "macosConfig", "content", "error", "config", "resolve", "reject", "notifier", "a", "err", "response", "metadata", "actionLabel", "action", "template", "variables", "_", "key", "HookHandler", "config", "logger", "ContextExtractor", "WebhookNotifier", "MacOSNotifier", "input", "event", "results", "error", "contextLength", "context", "enabledNotifiers", "notifier", "result", "index", "value", "successCount", "r", "totalCount", "readStdin", "resolve", "data", "chunk", "handleHook", "input", "hookInput", "config", "ConfigManager", "logger", "Logger", "validation", "output", "HookHandler", "error", "testCommand", "options", "config", "ConfigManager", "logger", "Logger", "validation", "error", "testEvent", "handler", "HookHandler", "output", "import_node_fs", "import_node_path", "import_yaml", "configCommand", "options", "initConfig", "showConfig", "validateConfig", "error", "configPath", "yamlContent", "DEFAULT_CONFIG", "config", "ConfigManager", "fullConfig", "webhook", "macos", "validation", "import_node_fs", "import_node_path", "logsCommand", "options", "logDir", "ConfigManager", "lines", "levelFilter", "logFiles", "f", "a", "latestLog", "allLines", "logEntries", "line", "entry", "displayLines", "levelIcon", "getLevelIcon", "timestamp", "output", "error", "level", "handleHook", "program", "testCommand", "configCommand", "logsCommand", "error"]
}
