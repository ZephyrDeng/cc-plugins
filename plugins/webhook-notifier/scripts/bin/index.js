#!/usr/bin/env node
"use strict";var Z=Object.create;var M=Object.defineProperty;var ee=Object.getOwnPropertyDescriptor;var te=Object.getOwnPropertyNames;var oe=Object.getPrototypeOf,ne=Object.prototype.hasOwnProperty;var ie=(i,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of te(e))!ne.call(i,n)&&n!==t&&M(i,n,{get:()=>e[n],enumerable:!(o=ee(e,n))||o.enumerable});return i};var re=(i,e,t)=>(t=i!=null?Z(oe(i)):{},ie(e||!i||!i.__esModule?M(t,"default",{value:i,enumerable:!0}):t,i));var K=require("node:process"),Q=require("commander");var $=require("node:process");var x=require("node:fs"),u=require("node:os"),m=require("node:path"),D=require("yaml");var r=require("zod"),se=r.z.enum(["debug","info","warn","error"]),ae=r.z.enum(["json","text"]),ce=r.z.enum(["daily","size"]),le=r.z.object({level:se.default("info"),directory:r.z.string().default("~/.claude/webhook-notifier/logs"),format:ae.default("json"),rotation:ce.default("daily")}),fe=r.z.object({enabled:r.z.boolean().default(!0),extract_context:r.z.boolean().default(!0),context_length:r.z.number().int().min(50).max(500).default(200)}),ge=r.z.object({enabled:r.z.boolean().default(!0)}),pe=r.z.object({notification:fe.default({}),session_end:ge.default({})}),me=r.z.enum(["linear","exponential"]),de=r.z.object({enabled:r.z.boolean().default(!1),max_attempts:r.z.number().int().min(1).max(10).default(3),backoff:me.default("exponential")}),ue=r.z.object({include:r.z.array(r.z.enum(["session_id","timestamp","project_info","git_info","context","transcript_path"])).default(["session_id","timestamp","project_info","git_info"]),exclude:r.z.array(r.z.string()).default([]),custom_fields:r.z.record(r.z.any()).default({})}),he=r.z.object({enabled:r.z.boolean().default(!0),url:r.z.string().url(),timeout:r.z.number().int().min(1).max(60).default(10),retry:de.default({}),headers:r.z.record(r.z.string()).default({}),payload:ue.default({})}),ye=r.z.object({label:r.z.string(),command:r.z.string()}),F=r.z.object({title:r.z.string().default("{{title}}"),subtitle:r.z.string().optional(),message:r.z.string().default("{{message}}")}),be=r.z.object({enabled:r.z.boolean().default(!1),title:r.z.string().default("Claude Code"),sound:r.z.string().default("default"),actions:r.z.array(ye).default([]),templates:r.z.object({notification:F.default({}),session_end:F.default({})}).default({})}),ve=r.z.object({webhook:he.optional(),macos:be.default({})}),I=r.z.object({logging:le.default({}),events:pe.default({}),notifiers:ve}),k={logging:{level:"info",directory:"~/.claude/webhook-notifier/logs",format:"json",rotation:"daily"},events:{notification:{enabled:!0,extract_context:!0,context_length:200},session_end:{enabled:!0}},notifiers:{macos:{enabled:!1,title:"Claude Code",sound:"default",actions:[],templates:{notification:{title:"{{title}}",subtitle:"\u7B49\u5F85 {{message_type}}",message:"{{last_message}}"},session_end:{title:"{{title}}",subtitle:"\u4F1A\u8BDD\u7ED3\u675F",message:"\u539F\u56E0: {{reason}}"}}}}};var p=class{config;configPath=null;constructor(e){if(e)this.configPath=e,this.config=this.loadConfigFromPath(e);else{let t=this.findAndLoadConfig();this.configPath=t.path,this.config=t.config}}findAndLoadConfig(){let e=[(0,m.join)(process.cwd(),".webhookrc.yaml"),(0,m.join)(process.cwd(),".webhookrc.yml"),(0,m.join)(process.cwd(),".webhookrc.json"),(0,m.join)((0,u.homedir)(),".webhookrc.yaml"),(0,m.join)((0,u.homedir)(),".webhookrc.yml"),(0,m.join)((0,u.homedir)(),".webhookrc.json"),(0,m.join)((0,u.homedir)(),".claude/webhook-notifier/config.yaml"),(0,m.join)((0,u.homedir)(),".claude/webhook-notifier/config.json")];for(let t of e)if((0,x.existsSync)(t))try{return{config:this.loadConfigFromPath(t),path:t}}catch(o){console.warn(`Failed to load config from ${t}:`,o);continue}return{config:k,path:null}}loadConfigFromPath(e){if(!(0,x.existsSync)(e))throw new Error(`Config file not found: ${e}`);let t=(0,x.readFileSync)(e,"utf-8"),o;if(e.endsWith(".yaml")||e.endsWith(".yml"))o=(0,D.parse)(t);else if(e.endsWith(".json"))o=JSON.parse(t);else throw new Error(`Unsupported config file format: ${e}`);let n=this.processEnvVars(o),s=I.safeParse(n);if(!s.success)throw new Error(`Config validation failed: ${s.error.message}`);return s.data}processEnvVars(e){if(typeof e=="string")return e.replace(/\$\{(\w+)\}/g,(t,o)=>{let n=process.env[o];return n===void 0?(console.warn(`Environment variable ${o} is not defined`),""):n});if(Array.isArray(e))return e.map(t=>this.processEnvVars(t));if(e!==null&&typeof e=="object"){let t={};for(let[o,n]of Object.entries(e))t[o]=this.processEnvVars(n);return t}return e}getConfig(){return this.config}get(e){let t=e.split("."),o=this.config;for(let n of t){if(o==null)throw new Error(`Config path not found: ${e}`);o=o[n]}return o}has(e){try{return this.get(e),!0}catch{return!1}}getConfigPath(){return this.configPath}validate(){let e=[];if(this.config.notifiers.webhook){let o=this.config.notifiers.webhook;o.enabled&&!o.url&&e.push("Webhook URL is required when webhook notifier is enabled")}this.config.notifiers.macos?.enabled&&process.platform!=="darwin"&&e.push("macOS notifier can only be enabled on macOS platform");let t=this.expandPath(this.config.logging.directory);return{valid:e.length===0,errors:e}}expandPath(e){return e.startsWith("~/")?(0,m.join)((0,u.homedir)(),e.slice(2)):e}getLogDirectory(){return this.expandPath(this.config.logging.directory)}};var h=require("node:fs"),C=require("node:path"),v=class{constructor(e){this.config=e;this.logDir=this.config.getLogDirectory(),this.logLevel=this.config.get("logging.level"),this.logFormat=this.config.get("logging.format"),this.ensureLogDirectory()}logDir;logLevel;logFormat;levelPriority={debug:0,info:1,warn:2,error:3};ensureLogDirectory(){(0,h.existsSync)(this.logDir)||(0,h.mkdirSync)(this.logDir,{recursive:!0})}shouldLog(e){return this.levelPriority[e]>=this.levelPriority[this.logLevel]}getDateString(){return new Date().toISOString().split("T")[0]??"unknown"}formatLogEntry(e){if(this.logFormat==="json")return JSON.stringify(e);let t=`[${e.timestamp}] ${e.level.toUpperCase()}: ${e.message}`;return e.meta&&(t+=`
  Meta: ${JSON.stringify(e.meta,null,2)}`),t}writeLog(e,t,o){if(!this.shouldLog(e))return;let n={timestamp:new Date().toISOString(),level:e,message:t,meta:o},s=this.formatLogEntry(n),a=this.getDateString(),c=(0,C.join)(this.logDir,`${a}.log`);try{(0,h.appendFileSync)(c,s+`
`)}catch(f){console.error("Failed to write log:",f)}if(e==="error"){let f=(0,C.join)(this.logDir,"errors.log");try{(0,h.appendFileSync)(f,s+`
`)}catch(g){console.error("Failed to write error log:",g)}}}debug(e,t){this.writeLog("debug",e,t)}info(e,t){this.writeLog("info",e,t)}warn(e,t){this.writeLog("warn",e,t)}error(e,t){this.writeLog("error",e,t),console.error(`[ERROR] ${e}`,t||"")}getLogFilePath(e){let t=e||this.getDateString();return(0,C.join)(this.logDir,`${t}.log`)}getErrorLogPath(){return(0,C.join)(this.logDir,"errors.log")}};var L=require("node:fs"),N=class{async extract(e,t=200){if(!(0,L.existsSync)(e))return null;try{let n=(0,L.readFileSync)(e,"utf-8").trim().split(`
`);for(let s=n.length-1;s>=0;s--)try{let a=n[s];if(!a)continue;let c=JSON.parse(a);if(c.role==="assistant"&&c.content){let f=this.truncate(c.content,t),g=this.detectMessageType(f);return{last_message:f,message_type:g}}}catch{continue}return null}catch(o){return console.error("Failed to extract context:",o),null}}truncate(e,t){return e.length<=t?e:e.slice(0,t)+"..."}detectMessageType(e){let t=e.toLowerCase();return/[?？]/.test(e)||/\b(how|what|why|when|where|which|who|吗|呢|如何|怎么|什么|哪|为什么|什么时候|哪里)\b/i.test(t)?"question":/\b(是否|同意|确认|可以吗|需要吗|要不要|approve|confirm|agree|okay|ok)\b/i.test(t)?"confirmation":/\b([0-9]\.|选择|或者|还是|option|choose|select)\b/i.test(t)?"choice":"info"}};var y=class{constructor(e,t){this.config=e;this.logger=t}};var _=require("node:child_process"),A=require("node:fs"),W=require("node:path"),P=class{extract(e){return this.isGitRepository(e)?{branch:this.getBranch(e),repo:this.getRemoteUrl(e),commit:this.getCommitHash(e)}:{branch:null,repo:null,commit:null}}isGitRepository(e){return(0,A.existsSync)((0,W.join)(e,".git"))}getBranch(e){try{return(0,_.execSync)("git rev-parse --abbrev-ref HEAD",{cwd:e,encoding:"utf-8"}).trim()||null}catch{return null}}getRemoteUrl(e){try{return(0,_.execSync)("git config --get remote.origin.url",{cwd:e,encoding:"utf-8"}).trim()||null}catch{return null}}getCommitHash(e){try{return(0,_.execSync)("git rev-parse --short HEAD",{cwd:e,encoding:"utf-8"}).trim()||null}catch{return null}}};var S=class extends y{gitExtractor;constructor(e,t){super(e,t),this.gitExtractor=new P}isEnabled(){return this.config.has("notifiers.webhook")&&this.config.get("notifiers.webhook.enabled")}getName(){return"webhook"}async send(e){let t=this.config.get("notifiers.webhook");if(!t)return{success:!1,notifier:"webhook",error:new Error("Webhook configuration not found")};try{let o=this.buildPayload(e,t);this.logger.debug("Webhook payload",o);let n=await this.sendWithRetry(t.url,o,t.timeout,t.retry,t.headers);return this.logger.info(`Webhook sent successfully (HTTP ${n.status})`),{success:!0,notifier:"webhook",response:{status:n.status,statusText:n.statusText}}}catch(o){return this.logger.error("Webhook send failed",{error:o instanceof Error?o.message:String(o)}),{success:!1,notifier:"webhook",error:o instanceof Error?o:new Error(String(o))}}}async sendWithRetry(e,t,o,n,s={}){if(!n.enabled)return this.sendRequest(e,t,o,s);let a=null;for(let c=1;c<=n.max_attempts;c++)try{return this.logger.debug(`Webhook attempt ${c}/${n.max_attempts}`),await this.sendRequest(e,t,o,s)}catch(f){if(a=f instanceof Error?f:new Error(String(f)),c<n.max_attempts){let g=this.calculateBackoff(c,n.backoff);this.logger.warn(`Webhook attempt ${c} failed, retrying in ${g}ms`,{error:a.message}),await this.sleep(g)}}throw a||new Error("Webhook send failed")}async sendRequest(e,t,o,n={}){let s=new AbortController,a=setTimeout(()=>s.abort(),o*1e3);try{let c=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json","User-Agent":"Claude-Code-Webhook-Notifier/2.0",...n},body:JSON.stringify(t),signal:s.signal});if(!c.ok)throw new Error(`HTTP ${c.status}: ${c.statusText}`);return c}finally{clearTimeout(a)}}calculateBackoff(e,t){return t==="linear"?e*1e3:Math.pow(2,e-1)*1e3}sleep(e){return new Promise(t=>setTimeout(t,e))}buildPayload(e,t){let o=new Date().toISOString(),n="claude-code-webhook-notifier";if(e.type==="notification"){let s={event:"notification",timestamp:o,source:n,notification_type:e.input.notification_type||"waiting_for_input",message:e.input.message};return t.payload.include.includes("context")&&e.context&&(s.context=e.context),t.payload.include.includes("session_id")&&(s.session={id:e.input.session_id}),t.payload.include.includes("project_info")&&(s.project=this.extractProjectInfo(e)),{...s,...t.payload.custom_fields}}else{let s={event:"session_end",timestamp:o,source:n,session:{id:e.input.session_id,reason:"reason"in e.input?e.input.reason:"stopped"}};return t.payload.include.includes("transcript_path")&&(s.session.transcript_path=e.input.transcript_path),t.payload.include.includes("project_info")&&(s.project=this.extractProjectInfo(e)),{...s,...t.payload.custom_fields}}}extractProjectInfo(e){let t=process.env.CLAUDE_PROJECT_DIR||e.input.cwd,o=this.gitExtractor.extract(t);return{directory:t,git:o}}};var H=re(require("node-notifier")),z=require("node:child_process"),U=require("node:util");var we=(0,U.promisify)(z.exec),E=class extends y{isEnabled(){return process.platform==="darwin"&&this.config.get("notifiers.macos.enabled")}getName(){return"macos"}async send(e){if(!this.isEnabled())return{success:!1,notifier:"macos",error:new Error("macOS notifier is not enabled or not on macOS platform")};let t=this.config.get("notifiers.macos");try{let o=this.formatNotification(e,t);return await this.sendNotification(o,t),this.logger.info("macOS notification sent successfully"),{success:!0,notifier:"macos"}}catch(o){return this.logger.error("macOS notification failed",{error:o instanceof Error?o.message:String(o)}),{success:!1,notifier:"macos",error:o instanceof Error?o:new Error(String(o))}}}sendNotification(e,t){return new Promise((o,n)=>{H.default.notify({title:e.title,subtitle:e.subtitle,message:e.message,sound:t.sound,wait:!0,actions:t.actions?.map(s=>s.label)||[]},(s,a,c)=>{if(s){n(s);return}c?.activationType==="actionClicked"&&c.activationValue&&this.handleAction(c.activationValue,t),o()})})}handleAction(e,t){let o=t.actions?.find(n=>n.label===e);o?.command&&(this.logger.debug(`Executing action command: ${o.command}`),we(o.command).catch(n=>{this.logger.error("Action command failed",{command:o.command,error:n.message})}))}formatNotification(e,t){if(e.type==="notification"){let o=t.templates?.notification||{title:t.title,subtitle:"\u7B49\u5F85\u8F93\u5165",message:"{{message}}"},n={title:t.title,message_type:e.context?.message_type||"input",last_message:e.context?.last_message||e.input.message,message:e.input.message};return{title:this.renderTemplate(o.title,n),subtitle:o.subtitle?this.renderTemplate(o.subtitle,n):void 0,message:this.renderTemplate(o.message,n)}}else{let o=t.templates?.session_end||{title:t.title,subtitle:"\u4F1A\u8BDD\u7ED3\u675F",message:"\u539F\u56E0: {{reason}}"},n={title:t.title,reason:"reason"in e.input?e.input.reason:"stopped",session_id:e.input.session_id};return{title:this.renderTemplate(o.title,n),subtitle:o.subtitle?this.renderTemplate(o.subtitle,n):void 0,message:this.renderTemplate(o.message,n)}}}renderTemplate(e,t){return e.replace(/\{\{(\w+)\}\}/g,(o,n)=>String(t[n]||""))}};var w=class{constructor(e,t){this.config=e;this.logger=t;this.contextExtractor=new N,this.notifiers=[new S(e,t),new E(e,t)]}contextExtractor;notifiers;async handle(e){this.logger.info(`Processing ${e.hook_event_name} event`,{session_id:e.session_id});try{this.validateInput(e);let t=await this.createEvent(e);if(!t)return{continue:!0};let o=await this.sendNotifications(t);return this.logResults(o),this.createOutput(o)}catch(t){return this.logger.error("Hook handling failed",{error:t instanceof Error?t.message:String(t)}),{continue:!0}}}validateInput(e){if(!e.session_id)throw new Error("session_id is required");if(!e.hook_event_name)throw new Error("hook_event_name is required")}async createEvent(e){switch(e.hook_event_name){case"Notification":return this.createNotificationEvent(e);case"Stop":case"SessionEnd":return this.createSessionEndEvent(e);default:return this.logger.warn(`Unsupported event type: ${e.hook_event_name}`),null}}async createNotificationEvent(e){if(!this.config.get("events.notification.enabled"))return this.logger.debug("Notification events are disabled"),null;let o={type:"notification",input:e};if(this.config.get("events.notification.extract_context")&&e.transcript_path){let s=this.config.get("events.notification.context_length"),a=await this.contextExtractor.extract(e.transcript_path,s);a?(o.context=a,this.logger.debug("Context extracted",a)):this.logger.debug("Failed to extract context, using basic notification")}return o}createSessionEndEvent(e){return this.config.get("events.session_end.enabled")?{type:"session_end",input:e}:(this.logger.debug("Session end events are disabled"),null)}async sendNotifications(e){let t=this.notifiers.filter(n=>n.isEnabled());return t.length===0?(this.logger.warn("No notifiers are enabled"),[]):(this.logger.info(`Sending notifications via ${t.length} notifiers`,{notifiers:t.map(n=>n.getName())}),(await Promise.allSettled(t.map(n=>n.send(e)))).map((n,s)=>({notifier:t[s]?.getName(),result:n})))}logResults(e){for(let{notifier:t,result:o}of e)if(o.status==="fulfilled"){let n=o.value;n.success?this.logger.info(`Notifier ${t} succeeded`):this.logger.error(`Notifier ${t} failed`,{error:n.error?.message})}else this.logger.error(`Notifier ${t} threw exception`,{error:o.reason})}createOutput(e){let t=e.filter(n=>n.result.status==="fulfilled"&&n.result.value.success).length,o=e.length;return{continue:!0,suppressOutput:!0,systemMessage:t===o?void 0:`Notifications: ${t}/${o} succeeded`}}};function xe(){return new Promise(i=>{let e="";$.stdin.setEncoding("utf-8"),$.stdin.on("data",t=>{e+=t}),$.stdin.on("end",()=>{i(e)})})}async function B(){try{let i=await xe();i.trim()||(console.error("Error: No input received"),process.exit(1));let e=JSON.parse(i),t=new p,o=new v(t),n=t.validate();n.valid||o.error("Configuration validation failed",{errors:n.errors});let a=await new w(t,o).handle(e);console.log(JSON.stringify(a)),process.exit(0)}catch(i){console.error("Hook handling failed:",i),process.exit(1)}}async function J(i){try{console.log(`\u{1F9EA} Testing notification configuration...
`);let e=new p,t=new v(e),o=e.validate();if(!o.valid){console.error("\u274C Configuration validation failed:");for(let c of o.errors)console.error(`  - ${c}`);process.exit(1)}console.log(`\u2705 Configuration is valid
`);let n={hook_event_name:"Notification",session_id:"test-cli-"+Date.now(),transcript_path:"/tmp/test-transcript.jsonl",cwd:process.cwd(),permission_mode:"enabled"},s=new w(e,t);console.log(`\u{1F4E4} Sending test notifications...
`);let a=await s.handle(n);a.continue?(console.log("\u2705 Test completed successfully!"),console.log(`
\u{1F4A1} Check logs for details:`,e.getLogDirectory()+"/")):(console.error("\u274C Test failed"),a.systemMessage&&console.error("Error:",a.systemMessage),process.exit(1))}catch(e){console.error("\u274C Test failed:",e),process.exit(1)}}var T=require("node:fs"),G=require("node:path"),V=require("yaml");async function q(i){try{i.init?await Ce():i.show?await Se():i.validate?await Ee():(console.log("Please specify an option: --show, --init, or --validate"),console.log("Example: webhook config --show"))}catch(e){console.error("\u274C Config command failed:",e),process.exit(1)}}async function Ce(){let i=(0,G.join)(process.cwd(),".webhookrc.yaml");(0,T.existsSync)(i)&&(console.error(`\u274C Config file already exists: ${i}`),console.log("\u{1F4A1} Use --show to view current config"),process.exit(1));let e=(0,V.stringify)(k);(0,T.writeFileSync)(i,e,"utf-8"),console.log("\u2705 Configuration file created successfully!"),console.log(`\u{1F4C1} Location: ${i}`),console.log(`
\u{1F4A1} Edit this file to customize your notification settings`)}async function Se(){let i=new p,e=i.getConfigPath();e?console.log(`\u{1F4C1} Config file: ${e}
`):(console.log("\u26A0\uFE0F  Using default configuration (no config file found)"),console.log(`
\u{1F4A1} Run 'webhook config --init' to create a config file
`)),console.log("\u{1F4CB} Current configuration:"),console.log("\u2500".repeat(60));let t=i.getConfig();if(console.log(`
\u{1F527} Logging:`),console.log(`  Level: ${t.logging.level}`),console.log(`  Directory: ${i.getLogDirectory()}`),console.log(`  Format: ${t.logging.format}`),console.log(`  Rotation: ${t.logging.rotation}`),console.log(`
\u{1F4CC} Events:`),console.log(`  Notification: ${t.events.notification.enabled?"\u2705 Enabled":"\u274C Disabled"}`),t.events.notification.enabled&&(console.log(`    Extract Context: ${t.events.notification.extract_context}`),console.log(`    Context Length: ${t.events.notification.context_length}`)),console.log(`  Session End: ${t.events.session_end.enabled?"\u2705 Enabled":"\u274C Disabled"}`),console.log(`
\u{1F514} Notifiers:`),t.notifiers.webhook){let n=t.notifiers.webhook;console.log(`  Webhook: ${n.enabled?"\u2705 Enabled":"\u274C Disabled"}`),n.enabled&&(console.log(`    URL: ${n.url}`),console.log(`    Timeout: ${n.timeout}s`),console.log(`    Max Attempts: ${n.retry.max_attempts}`),console.log(`    Backoff: ${n.retry.backoff}`))}let o=t.notifiers.macos;console.log(`  macOS: ${o.enabled?"\u2705 Enabled":"\u274C Disabled"}`),o.enabled&&(console.log(`    Title: ${o.title}`),console.log(`    Sound: ${o.sound}`),console.log(`    Actions: ${o.actions.length} configured`)),console.log(`
`+"\u2500".repeat(60))}async function Ee(){console.log(`\u{1F50D} Validating configuration...
`);let i=new p,e=i.validate();if(e.valid){console.log("\u2705 Configuration is valid!");let t=i.getConfigPath();t&&console.log(`\u{1F4C1} Config file: ${t}`)}else{console.error(`\u274C Configuration validation failed:
`);for(let t of e.errors)console.error(`  - ${t}`);process.exit(1)}}var d=require("node:fs"),j=require("node:path");async function Y(i){try{let t=new p().getLogDirectory();(0,d.existsSync)(t)||(console.error(`\u274C Log directory not found: ${t}`),console.log(`
\u{1F4A1} No logs have been generated yet`),process.exit(1));let o=Number.parseInt(i.lines||"20",10),n=i.level?.toLowerCase();if(i.follow){console.log("\u26A0\uFE0F  Follow mode not implemented yet"),console.log("\u{1F4A1} Use --lines to view recent logs instead");return}let s=(0,d.readdirSync)(t).filter(l=>l.endsWith(".log")&&!l.includes("errors")).map(l=>({name:l,path:(0,j.join)(t,l),mtime:(0,d.statSync)((0,j.join)(t,l)).mtime})).sort((l,b)=>b.mtime.getTime()-l.mtime.getTime());if(s.length===0){console.log("\u2139\uFE0F  No log files found");return}let a=s[0];console.log(`\u{1F4CB} Viewing: ${a.name}`),console.log(`\u{1F4C1} Location: ${t}`),console.log("\u2500".repeat(80)),console.log();let f=(0,d.readFileSync)(a.path,"utf-8").trim().split(`
`).filter(Boolean),g=[];for(let l of f)try{let b=JSON.parse(l);if(n&&b.level.toLowerCase()!==n)continue;g.push(b)}catch{g.push({timestamp:"",level:"info",message:l})}let O=g.slice(-o);for(let l of O){let b=ke(l.level),X=l.timestamp?new Date(l.timestamp).toLocaleString():"",R=`${b} ${X} ${l.message}`;l.meta&&(R+=`
   ${JSON.stringify(l.meta)}`),console.log(R)}console.log(),console.log("\u2500".repeat(80)),console.log(`Showing last ${O.length} of ${g.length} entries`),n&&console.log(`Filtered by level: ${n}`)}catch(e){console.error("\u274C Failed to read logs:",e),process.exit(1)}}function ke(i){switch(i.toLowerCase()){case"error":return"\u274C";case"warn":return"\u26A0\uFE0F ";case"info":return"\u2139\uFE0F ";case"debug":return"\u{1F50D}";default:return"  "}}(async()=>{if(!(process.argv.length>2)&&!K.stdin.isTTY)await B();else{let t=new Q.Command;t.name("webhook").description("Claude Code Webhook Notifier - \u5F3A\u5927\u7684\u901A\u77E5\u7CFB\u7EDF").version("2.0.0"),t.command("test").description("\u6D4B\u8BD5\u901A\u77E5\u914D\u7F6E").option("-n, --notifier <type>","\u6307\u5B9A\u901A\u77E5\u5668: webhook | macos | all","all").action(J),t.command("config").description("\u914D\u7F6E\u7BA1\u7406").option("-s, --show","\u663E\u793A\u5F53\u524D\u914D\u7F6E").option("-i, --init","\u521D\u59CB\u5316\u914D\u7F6E\u6587\u4EF6").option("-v, --validate","\u9A8C\u8BC1\u914D\u7F6E").action(q),t.command("logs").description("\u67E5\u770B\u901A\u77E5\u65E5\u5FD7").option("-n, --lines <number>","\u663E\u793A\u884C\u6570","20").option("-f, --follow","\u5B9E\u65F6\u8DDF\u8E2A\u65E5\u5FD7").option("-l, --level <level>","\u8FC7\u6EE4\u65E5\u5FD7\u7EA7\u522B").action(Y),t.parse()}})().catch(i=>{console.error("Fatal error:",i),process.exit(1)});
//# sourceMappingURL=index.js.map
